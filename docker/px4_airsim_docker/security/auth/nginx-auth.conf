# NGINX Authentication Proxy Configuration
# Provides HTTP Basic Authentication for MAVLink access
# Works with VPN setup for enhanced security

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req_zone $remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $remote_addr zone=api:10m rate=60r/m;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Authentication realm
    auth_basic_realm "PX4 Remote Server Access";
    
    # Main server block
    server {
        listen 443 ssl http2;
        server_name px4-auth-server;
        
        # SSL certificates (mount as volumes)
        ssl_certificate /etc/ssl/private/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;
        
        # Authentication status endpoint
        location /auth {
            internal;
            auth_basic "PX4 Server Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Return user info for successful auth
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            
            return 200 "OK";
        }
        
        # API authentication endpoint
        location /api/auth {
            limit_req zone=auth burst=5 nodelay;
            
            auth_basic "PX4 API Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Return authentication token
            add_header Content-Type application/json;
            return 200 '{"status":"authenticated","user":"$remote_user","expires":"3600"}';
        }
        
        # Health check endpoint (no auth required)
        location /health {
            access_log off;
            return 200 "Authentication service healthy";
            add_header Content-Type text/plain;
        }
        
        # User management endpoint (admin only)
        location /admin {
            limit_req zone=auth burst=3 nodelay;
            
            auth_basic "PX4 Administration";
            auth_basic_user_file /etc/nginx/.htpasswd-admin;
            
            # Basic user management interface
            root /usr/share/nginx/html/admin;
            index index.html;
        }
        
        # MAVLink proxy with authentication
        location /mavlink/ {
            limit_req zone=api burst=20 nodelay;
            
            # Authenticate before proxying
            auth_request /auth;
            
            # Log authenticated access
            access_log /var/log/nginx/mavlink_access.log main;
            
            # Proxy to MAVLink Router (VPN network)
            proxy_pass http://10.10.0.100:14540/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # MAVLink-specific headers
            proxy_set_header X-MAVLink-User $remote_user;
            proxy_set_header X-MAVLink-Auth-Time $time_iso8601;
        }
        
        # WebSocket proxy for real-time MAVLink streams
        location /mavlink/ws {
            limit_req zone=api burst=10 nodelay;
            
            # Authenticate WebSocket connections
            auth_request /auth;
            
            # WebSocket proxy configuration
            proxy_pass http://10.10.0.100:8765;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeout settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # Certificate management endpoint
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }
        
        # Security - block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name px4-auth-server;
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
}

# Stream proxy for direct UDP MAVLink (with authentication)
stream {
    # Log format for stream proxy
    log_format basic '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time';
    access_log /var/log/nginx/stream_access.log basic;
    
    # Upstream MAVLink servers
    upstream mavlink_servers {
        server 10.10.0.11:14550;  # Drone 1
        server 10.10.0.12:14551;  # Drone 2
        server 10.10.0.13:14552;  # Drone 3
    }
    
    # Load balancer for MAVLink connections
    server {
        listen 14550 udp;
        proxy_pass mavlink_servers;
        proxy_timeout 1s;
        proxy_responses 1;
        
        # Connection limits
        proxy_bind $remote_addr transparent;
    }
    
    # API endpoint stream proxy
    server {
        listen 14540 udp;
        proxy_pass 10.10.0.100:14540;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}